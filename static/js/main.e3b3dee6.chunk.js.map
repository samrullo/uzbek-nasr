{"version":3,"sources":["AppContext.js","AppContextProvider.js","components/NavBar.js","components/Dashboard.js","components/BooksList.js","components/BookContent.js","components/AppRoutes.js","components/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","AppContextProvider","_ref","children","isDarkMode","setIsDarkMode","useState","bookTitle","setBookTitle","contextValues","window","location","hostname","baseURL","createElement","Provider","value","NavBar","title","useNavigate","useContext","className","Link","to","type","data-bs-toggle","data-bs-target","id","Dashboard","Fragment","href","target","rel","BooksList","works","setWorks","searchTerm","setSearchTerm","navigate","useEffect","async","response","fetch","concat","data","json","fetchWorks","filteredWorks","filter","work","author","toLowerCase","includes","length","placeholder","onChange","e","map","index","key","onClick","filename","handleWorkClick","BookContent","fileName","useParams","bookContent","setBookContent","currentPage","setCurrentPage","goToPage","setGoToPage","theurl","console","log","text","tokens","tokenize","pages","splitIntoPages","error","loadBook","match","pageSize","arguments","undefined","i","push","slice","join","prevPage","disabled","nextPage","onSubmit","event","preventDefault","parseInt","aria-label","AppRoutes","Routes","Route","path","element","MainPage","BrowserRouter","basename","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e3b3dee6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AppContext = React.createContext()\n\nexport default AppContext","import React from \"react\";\nimport { useState } from \"react\";\nimport AppContext from \"./AppContext\";\n\nconst AppContextProvider = ({ children }) => {\n    const [isDarkMode, setIsDarkMode] = useState(false);\n    const [bookTitle, setBookTitle] = useState(\"\");\n    const isLocalhost = window.location.hostname === \"localhost\";\n    const baseURL = isLocalhost ? \"/uzbek-nasr\" : \"/uzbek-nasr\"\n\n    const contextValues = { isDarkMode, setIsDarkMode, baseURL, bookTitle, setBookTitle }\n\n    return <AppContext.Provider value={contextValues}>{children}</AppContext.Provider>\n}\n\nexport default AppContextProvider;","import React from \"react\";\nimport { useContext } from \"react\";\nimport AppContext from \"../AppContext\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst NavBar = ({ title }) => {\n  const navigate = useNavigate();\n  const { isDarkMode, setIsDarkMode } = useContext(AppContext);\n\n  return (\n    <nav\n      className={\n        isDarkMode\n          ? `navbar navbar-expand-lg bg-dark navbar-dark`\n          : `navbar navbar-expand-lg bg-light navbar-light`\n      }\n    >\n      <Link className=\"navbar-brand\" to=\"/\">\n        {title}\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-bs-toggle=\"collapse\"\n        data-bs-target=\"#mynavigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"mynavigation\">\n        <Link to=\"/\" className=\"nav-link\">\n          Kitoblar\n        </Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Dashboard = () => {\n  return (\n    <>\n      <p>\n        Hurmatly o'quvchi. Ushbu o'zbek nasrlari{\" \"}\n        <a\n          href=\"https://n.ziyouz.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          ziyouz\n        </a>{\" \"}\n        saytidan yuklab olindi. Ziyouz saytida pdf tarzida taqdim etilgan bu\n        asarlarni kamina dasturchilik qobiliyatimni ishga solib kitoblarni\n        yuklab oldim, so'ngra pdf varaqlarini OCR texnologiyasi yordamida textga\n        o'girdim. Avvalombor ushbu asarlarni o'zbek o'quvchilariga taqdim etgani\n        uchun Ziyouz saytiga minnatdorchilik bildiraman. PDF varaqlari ba'zi\n        holatlarda tiniq bo'lmagani sababli Python OCR texnologiyasi textni aniq\n        o'gira olmagan. Shuning uchun textda xatoliklar mavjud. Shunday bo'lsa\n        ham kitoblarni o'qish va ulardan bahramand bo'lish mumkin.\n      </p>\n      <div className=\"list-group\">\n        <Link className=\"list-group-item list-group-item-action\" to=\"/books\">\n          Kitoblar\n        </Link>        \n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useContext } from 'react';\nimport AppContext from '../AppContext';\n\nfunction BooksList() {\n  const { baseURL,bookTitle, setBookTitle } = useContext(AppContext);\n  const [works, setWorks] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchWorks() {      \n      const response = await fetch(`${baseURL}/data/uzbek_works.json`);      \n      const data = await response.json();\n      setWorks(data);\n    }\n    fetchWorks();\n  }, [baseURL]);\n\n  const filteredWorks = works.filter(work =>\n    work.author.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    work.work.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleWorkClick = (work) => {\n    setBookTitle(`${work.author} ${work.work}`)\n    navigate(`/book/${work.filename}`);\n  };\n\n  return (\n    <div>\n      <h1>Hammasi bo'lib {works.length} ta asardan bahramand bo'ling</h1>\n      <input className='form-control'\n        type=\"text\"\n        placeholder=\"Qidirish...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      <div className='list-group'>\n        {filteredWorks.map((work, index) => (\n          <a href=\"#\" className='list-group-item list-group-item-action' key={index} onClick={() => handleWorkClick(work)}>\n            <strong>{work.author}</strong> - {work.work}\n          </a>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default BooksList;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useContext } from \"react\";\nimport AppContext from \"../AppContext\";\n\nfunction BookContent() {\n    const { baseURL,bookTitle } = useContext(AppContext)\n    const { fileName } = useParams();\n    const [bookContent, setBookContent] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [goToPage,setGoToPage]=useState(1)\n\n    useEffect(() => {\n        // Load the book content when the component mounts\n        const loadBook = async () => {\n            try {\n                const theurl = `${baseURL}/data/uzbek_books/${fileName}`\n                const response = await fetch(theurl);\n                console.log(`will fetch ${theurl}`)\n                const text = await response.text();\n\n                // Tokenize and split text into pages\n                const tokens = tokenize(text);\n                const pages = splitIntoPages(tokens);\n                setBookContent(pages);\n            } catch (error) {\n                console.error(\"Error loading book content:\", error);\n            }\n        };\n\n        loadBook();\n    }, [baseURL, fileName]);\n\n    // Tokenize the text\n    const tokenize = (text) =>\n        text.match(/[\\w\\u0400-\\u04FF]+|\\n|[!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~]/g) || [];\n\n    // Split tokens into pages\n    const splitIntoPages = (tokens, pageSize = 1000) => {\n        const pages = [];\n        for (let i = 0; i < tokens.length; i += pageSize) {\n            pages.push(tokens.slice(i, i + pageSize).join(\" \"));\n        }\n        return pages;\n    };\n\n    // Render the current page\n    const renderPage = () => bookContent[currentPage - 1] || \"Page not found.\";\n\n    // Go to previous page\n    const prevPage = () => {\n        if (currentPage > 1) setCurrentPage(currentPage - 1);\n    };\n\n    // Go to next page\n    const nextPage = () => {\n        if (currentPage < bookContent.length) setCurrentPage(currentPage + 1);\n    };\n\n    //handle go to page\n    const handleGoToPage=(event)=>{\n        event.preventDefault()\n        setCurrentPage(parseInt(goToPage))\n    }\n\n    return (<div>\n        <h1>{bookTitle}</h1>\n        <div className=\"content-box\">{renderPage()}</div>\n\n        <div className=\"page-number\">\n            Page {currentPage} of {bookContent.length || 1}\n        </div>\n\n        <div className=\"page-button-container\">\n            <button className=\"page-button\" onClick={prevPage} disabled={currentPage === 1}>\n                Previous\n            </button>\n            <button\n                className=\"page-button\"\n                onClick={nextPage}\n                disabled={currentPage === bookContent.length}\n            >\n                Next\n            </button>\n        </div>\n        <div className=\"mt-3\">\n            <form className=\"form-inline d-flex\" onSubmit={handleGoToPage}>\n                <input\n                    type=\"number\"\n                    className=\"form-control me-2\"\n                    placeholder=\"Maxsus betga utish\"\n                    aria-label=\"go-to-page\"\n                    value={goToPage}\n                    onChange={(e)=>setGoToPage(e.target.value)}\n                />\n                <button className=\"page-button\" type=\"submit\">Utish</button>\n            </form>\n        </div>\n    </div>)\n}\n\nexport default BookContent;","import React from \"react\";\nimport { Routes, Route, Outlet } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport BooksList from \"./BooksList\";\nimport BookContent from \"./BookContent\";\n\nconst AppRoutes = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Dashboard />} />\n      <Route path=\"/books\" element={<BooksList />} />\n      <Route path=\"/book/:fileName\" element={<BookContent />} />\n    </Routes>\n  );\n};\n\nexport default AppRoutes;\n","import React, { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppContext from \"../AppContext\";\nimport NavBar from \"./NavBar\";\nimport AppRoutes from \"./AppRoutes\";\n\nconst MainPage = () => {\n    const { isDarkMode, setIsDarkMode, baseURL } = useContext(AppContext)\n\n    return (\n        <BrowserRouter basename=\"/uzbek-nasr\">\n            <div className=\"container mt-5\">\n                <header>\n                    <NavBar title=\"Uzbek Nasri\" />\n                </header>\n                <AppRoutes />\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default MainPage;","import React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport AppContextProvider from \"./AppContextProvider\";\nimport MainPage from \"./components/MainPage\";\nimport \"./App.css\"; // Move your CSS here\n\nfunction App() {\n  return <AppContextProvider><MainPage /></AppContextProvider>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}